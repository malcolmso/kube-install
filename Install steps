##############################
# Kubernetes on Bare Metal  #
##############################

########## Step 1: Setup Bare Metal Infrastructure ##########

# 1. Install containerd
sudo apt install -y containerd

# 2. Configure containerd to use SystemdCgroup
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
sudo sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml

# 3. Restart containerd
sudo systemctl restart containerd

# 4. Disable swap (required for Kubernetes)
sudo swapoff -a
sudo sed -i '/[[:space:]]swap[[:space:]]/ s/^/#/' /etc/fstab

# 5. Install dependencies
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg socat docker.io

# 6. Add Kubernetes APT repository
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update

# 7. Install kubelet and kubeadm
sudo apt-get install -y kubelet kubeadm

# 8. Install kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# 9. Verify installations
kubelet --version
kubeadm version
kubectl version --client


########## Step 2: Initialize the Control Plane ##########

# 1. Enable IP forwarding
echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward

# 2. Make IP forwarding persistent
sudo sed -i 's/^#*net.ipv4.ip_forward=.*/net.ipv4.ip_forward=1/' /etc/sysctl.conf
sudo sysctl -p

# 3. Pull control plane container images
sudo kubeadm config images pull

# 4. Initialize the control plane (save the output with the join command!)
sudo kubeadm init

# 5. Set up local kubeconfig for kubectl
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# 6. Install Calico CNI plugin
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

# 7. Check node status
kubectl get nodes


########## Step 3: Join Worker Node ##########

# Run these commands on each worker node:

# 1. Install containerd
sudo apt install -y containerd

# 2. Configure containerd
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
sudo sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml
sudo systemctl restart containerd

# 3. Disable swap
sudo swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab

# 4. Install dependencies
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg socat docker.io

# 5. Add Kubernetes APT repo
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update

# 6. Install kubelet and kubeadm
sudo apt-get install -y kubelet kubeadm

# 7. Enable IP forwarding
echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
sudo sed -i 's/^#*net.ipv4.ip_forward=.*/net.ipv4.ip_forward=1/' /etc/sysctl.conf
sudo sysctl -p

# 8. Join the cluster (replace with the actual output from kubeadm init)
sudo kubeadm join <control-plane-ip>:6443 --token <token> --discovery-token-ca-cert-hash sha256:<hash>


########## Step 4: Label the Worker Node (on control plane) ##########

# Example (adjust the node name accordingly)
kubectl label node kube-work01 node-role.kubernetes.io/worker=true
kubectl get nodes --show-labels
